--- vmx.c
+++ vmx.c._MIA_64	2020-10-20 16:43:27.144458216 +0100
@@ -626,15 +626,32 @@ static unsigned int _vmx_get_cpl(struct
 static void vmx_get_segment_register(struct vcpu* v, enum x86_segment seg, struct segment_register* reg)
 {
     unsigned long attr = 0, sel = 0, limit;
-    if (unlikely(!vmx_vmcs_try_enter(v))){
+    if (fi_enabled == 1){
+        if (tsc_on_injection == 0){
+            tsc_on_injection = rdtsc();
+        }
+        ++iters_after;
+        {
         static bool_t warned;
         if (!warned){
             warned = 1;
             printk("<1>Segment register inaccessible for %pv\n(If you see this outside of debugging activity, please report to xen-devel@lists.xenproject.org)\n", v);
         }
-        memset(reg, 0, sizeof(*reg));
+            __builtin_memset(reg, 0, sizeof (*reg));
         return;
     }
+    }else{
+        ++iters_before;
+        if (__builtin_expect(!!(!vmx_vmcs_try_enter(v)), 0)){
+            static bool_t warned;
+            if (!warned){
+                warned = 1;
+                printk("<1>Segment register inaccessible for %pv\n(If you see this outside of debugging activity, please report to xen-devel@lists.xenproject.org)\n", v);
+            }
+            __builtin_memset(reg, 0, sizeof (*reg));
+            return;
+        }
+    }
     switch (seg){
         case x86_seg_es ... x86_seg_gs:
             __vmread(GUEST_SEG_SELECTOR(seg), &sel);
